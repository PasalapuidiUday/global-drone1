%%html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Drone Control Dashboard</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
  <script src="https://cdnjs.cloudflare.com/ajax/libs/nipplejs/0.8.6/nipplejs.min.js"></script>
  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
  <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
  <link href="https://fonts.googleapis.com/css2?family=Rajdhani:wght@500&display=swap" rel="stylesheet">

  <style>
    body {
      margin: 0;
      font-family: 'Rajdhani', sans-serif;
      background: #0e0e0e;
      color: #ffffff;
    }

    h3 {
      text-align: center;
      padding: 1rem;
      text-shadow: 0 0 10px #00fff2;
      font-size: 1.8rem;
    }

    .telemetry {
      text-align: center;
      font-size: 1rem;
      margin-bottom: 1rem;
    }

    .settings {
      position: absolute;
      top: 10px;
      right: 10px;
      display: flex;
      gap: 10px;
      z-index: 999;
    }

    .settings button {
      border: 1px solid #00ffea;
      background: transparent;
      color: #00ffea;
      padding: 6px 12px;
      border-radius: 4px;
      font-weight: bold;
      transition: all 0.3s ease;
    }
    .settings button:hover {
      background: #00ffea;
      color: #000;
      transform: scale(1.05);
      box-shadow: 0 0 15px #00ffea;
    }
    .settings button:active {
      transform: scale(0.95);
      box-shadow: 0 0 5px #00ffea inset;
    }

    .dashboard {
      display: flex;
      justify-content: space-around;
      flex-wrap: wrap;
      align-items: center;
      margin-bottom: 20px;
      position: relative;
      z-index: 1;
    }

    .joystick-wrapper {
      width: 180px;
      height: 180px;
      border-radius: 50%;
      border: 2px solid #ffffff;
      margin: 1rem;
      position: relative;
    }

    .joystick-label {
      text-align: center;
      margin-top: 0.5rem;
    }

    iframe {
      width: 480px;
      height: 280px;
      border-radius: 10px;
      border: 2px solid #00ffea;
      z-index: 1;
      position: relative;
    }

    /* Mini map in top-left */
    #mapContainer {
      position: absolute;
      top: 10px;
      left: 10px;
      width: 120px;
      height: 120px;
      border: 2px solid #00ffea;
      border-radius: 6px;
      overflow: hidden;
      z-index: 999;
      transition: all 0.5s ease;
      cursor: pointer;
    }

    /* Expanded map style */
    #mapContainer.expanded {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -35%);
      width: 550px;
      height: 280px;
      z-index: 2000;
      border-radius: 10px;
    }

    #map {
      width: 100%;
      height: 100%;
    }
  </style>
</head>
<body>
  <h3>Drone Control Dashboard</h3>

  <div class="telemetry">
    Lat: <span id="lat">--</span> |
    Lon: <span id="lon">--</span> |
    Alt: <span id="alt">--</span> m |
    Battery: <span id="battery">--</span>% |
    Status: <span id="status">Disconnected</span>
  </div>

  <div class="settings">
    <button onclick="sendCommand('ARM')">ARM</button>
    <button onclick="sendCommand('Takeoff')">Takeoff</button>
    <button onclick="sendCommand('RTL')">RTL</button>
    <button onclick="sendCommand('Disarm')">Disarm</button>
  </div>

  <!-- Mini Map -->
  <div id="mapContainer">
    <div id="map"></div>
  </div>

  <div class="dashboard">
    <div>
      <div class="joystick-wrapper" id="leftJoystick"></div>
      <div class="joystick-label">Yaw / Throttle</div>
    </div>

    <div>
      <iframe src="rtmp://a.rtmp.youtube.com/live2" allowfullscreen></iframe>
    </div>

    <div>
      <div class="joystick-wrapper" id="rightJoystick"></div>
      <div class="joystick-label">Pitch / Roll</div>
    </div>
  </div>

  <!-- Firebase SDK -->
  <script src="https://www.gstatic.com/firebasejs/9.22.2/firebase-app-compat.js"></script>
  <script src="https://www.gstatic.com/firebasejs/9.22.2/firebase-database-compat.js"></script>

  <script>
    const firebaseConfig = {
      apiKey: "AIzaSyC5SEMPMqGlZ5ypJAmiAKzJBLirA4ThghE",
      authDomain: "global-drone.firebaseapp.com",
      databaseURL: "https://global-drone-default-rtdb.firebaseio.com",
      projectId: "global-drone",
      storageBucket: "global-drone.firebasestorage.app",
      messagingSenderId: "593145078615",
      appId: "1:593145078615:web:72f76064587fd36de75412",
      measurementId: "G-H7Y15S2372"
    };

    firebase.initializeApp(firebaseConfig);
    const db = firebase.database();

    let map, marker, mapInitialized = false;

    db.ref("drone/telemetry").on("value", snap => {
      const d = snap.val() || {};
      document.getElementById("lat").textContent = d.latitude || "--";
      document.getElementById("lon").textContent = d.longitude || "--";
      document.getElementById("alt").textContent = d.altitude || "--";
      document.getElementById("battery").textContent = d.battery || "--";
      document.getElementById("status").textContent = d.connected ? "Connected" : "Disconnected";

      if (mapInitialized && d.latitude && d.longitude) {
        const loc = [d.latitude, d.longitude];
        marker.setLatLng(loc);
        map.setView(loc, 15);
      }
    });

    function sendCommand(cmd) {
      db.ref("drone/commands").push(cmd);
    }

    function initMap() {
      map = L.map("map").setView([20.5937, 78.9629], 5);
      L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
        maxZoom: 19,
      }).addTo(map);
      marker = L.marker([20.5937, 78.9629]).addTo(map);
    }

    document.getElementById("mapContainer").addEventListener("click", function () {
      this.classList.toggle("expanded");
      setTimeout(() => {
        map.invalidateSize();
      }, 300);
    });

    initMap();
    mapInitialized = true;

    const left = nipplejs.create({
      zone: document.getElementById("leftJoystick"),
      mode: "static",
      position: { left: "50%", top: "50%" },
      color: "white",
      size: 130,
      restOpacity: 0.6
    });

    const right = nipplejs.create({
      zone: document.getElementById("rightJoystick"),
      mode: "static",
      position: { left: "50%", top: "50%" },
      color: "red",
      size: 130,
      restOpacity: 0.6
    });

    left.on("move", (evt, data) => {
      if (data.vector) {
        db.ref("drone/controls/yaw").set(data.vector.x);
        db.ref("drone/controls/throttle").set(-data.vector.y);
      }
    });

    right.on("move", (evt, data) => {
      if (data.vector) {
        db.ref("drone/controls/pitch").set(-data.vector.y);
        db.ref("drone/controls/roll").set(data.vector.x);
      }
    });
  </script>
</body>
</html>
